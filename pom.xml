<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.customer</groupId>
    <artifactId>atscale-gatling</artifactId>
    <version>1.0-SNAPSHOT</version>

    <properties>
        <maven.compiler.source>19</maven.compiler.source>
        <maven.compiler.target>19</maven.compiler.target>
        <maven.compiler.release>19</maven.compiler.release>
        <scala.version>2.13.14</scala.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <gatling.version>3.14.3</gatling.version>
        <gatling-maven-plugin.version>4.19.2</gatling-maven-plugin.version>
        <maven-compiler-plugin.version>3.14.0</maven-compiler-plugin.version>
        <maven-resources-plugin.version>3.3.1</maven-resources-plugin.version>
        <maven-jar-plugin.version>3.4.2</maven-jar-plugin.version>
        <log4j2.version>2.25.1</log4j2.version>
        <atscale.gatling.core.version>1.5</atscale.gatling.core.version>
    </properties>
    <build>
        <sourceDirectory>src/main</sourceDirectory>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
            </resource>
            <resource>
                <directory>${project.basedir}</directory>
                <includes>
                    <include>mvnw</include>
                    <include>mvnw.cmd</include>
                </includes>
                <filtering>false</filtering>
            </resource>
        </resources>
        <plugins>
            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven-compiler-plugin.version}</version>
            </plugin>
            <plugin>
                <artifactId>maven-resources-plugin</artifactId>
                <version>${maven-resources-plugin.version}</version>
            </plugin>
            <plugin>
                <artifactId>maven-jar-plugin</artifactId>
                <version>${maven-jar-plugin.version}</version>
            </plugin>
            <plugin>
                <groupId>io.gatling</groupId>
                <artifactId>gatling-maven-plugin</artifactId>
                <version>${gatling-maven-plugin.version}</version>
                <configuration>
                    <!-- Need the following to get the gatling.runDescription and gatling.simulationClass properties to pass through so Gatling Highcharts can use the system property in the Report-->
                    <jvmArgs>
                        <jvmArg>-Xms2G</jvmArg>
                        <jvmArg>-Xmx8G</jvmArg>
                        <jvmArg>-Dgatling.runDescription=${gatling.runDescription}</jvmArg>
                        <jvmArg>-Dgatling.simulationClass=${gatling.simulationClass}</jvmArg>
                    </jvmArgs>
                </configuration>
            </plugin>
            <!-- support for Scala -->
            <plugin>
                <groupId>net.alchim31.maven</groupId>
                <artifactId>scala-maven-plugin</artifactId>
                <version>4.8.1</version> <!-- Latest as of mid-2025 -->
                <executions>
                    <execution>
                        <goals>
                            <goal>compile</goal>
                            <goal>testCompile</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!-- Plugin to move the dependencies to the target directory -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>3.1.2</version>
                <executions>
                    <execution>
                        <id>copy-dependencies</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/dependency</outputDirectory>
                            <includeScope>runtime</includeScope>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!-- Defines a call to a java executable -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>3.3.0</version>
                <executions>
                    <execution>
                        <id>query-extract</id>
                        <goals>
                            <goal>java</goal>
                        </goals>
                        <configuration>
                            <mainClass>executors.QueryExtractExecutor</mainClass>
                            <classpathScope>runtime</classpathScope>
                        </configuration>
                    </execution>
                    <execution>
                        <id>installer-query-extract</id>
                        <goals>
                            <goal>java</goal>
                        </goals>
                        <configuration>
                            <mainClass>executors.InstallerVerQueryExtractExecutor</mainClass>
                            <classpathScope>runtime</classpathScope>
                        </configuration>
                    </execution>
                    <execution>
                        <id>closedstep-concurrent-simulation-executor</id>
                        <goals>
                            <goal>java</goal>
                        </goals>
                        <configuration>
                            <mainClass>executors.ClosedStepConcurrentSimulationExecutor</mainClass>
                            <classpathScope>runtime</classpathScope>
                        </configuration>
                    </execution>
                    <execution>
                        <id>openstep-concurrent-simulation-executor</id>
                        <goals>
                            <goal>java</goal>
                        </goals>
                        <configuration>
                            <mainClass>executors.OpenStepConcurrentSimulationExecutor</mainClass>
                            <classpathScope>runtime</classpathScope>
                        </configuration>
                    </execution>
                    <execution>
                        <id>closedstep-sequential-simulation-executor</id>
                        <goals>
                            <goal>java</goal>
                        </goals>
                        <configuration>
                            <mainClass>executors.ClosedStepSequentialSimulationExecutor</mainClass>
                            <classpathScope>runtime</classpathScope>
                        </configuration>
                    </execution>
                    <execution>
                        <id>openstep-sequential-simulation-executor</id>
                        <goals>
                            <goal>java</goal>
                        </goals>
                        <configuration>
                            <mainClass>executors.OpenStepSequentialSimulationExecutor</mainClass>
                            <classpathScope>runtime</classpathScope>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!-- Surefire runs unit tests during the build process.  Automatically detects and executes tests -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>3.2.5</version>
                <configuration>
                    <useModulePath>false</useModulePath>
                </configuration>
            </plugin>
            <!-- Use enforcer to catch any dependency conflicts -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
                <version>3.4.1</version>
                <executions>
                    <execution>
                        <id>enforce</id>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                        <configuration>
                            <rules>
                                <dependencyConvergence/>
                            </rules>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.apache.logging.log4j</groupId>
                <artifactId>log4j-bom</artifactId>
                <version>${log4j2.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.scala-lang</groupId>
                <artifactId>scala-library</artifactId>
                <version>${scala.version}</version>
            </dependency>
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-api</artifactId>
                <version>2.0.17</version>
            </dependency>
            <dependency>
                <groupId>org.jodd</groupId>
                <artifactId>jodd-util</artifactId>
                <version>6.3.0</version>
            </dependency>
            <dependency>
                <groupId>org.xmlresolver</groupId>
                <artifactId>xmlresolver</artifactId>
                <version>6.0.19</version>
            </dependency>
            <dependency>
                <groupId>com.github.spotbugs</groupId>
                <artifactId>spotbugs-annotations</artifactId>
                <version>4.9.3</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-databind</artifactId>
                <version>2.19.2</version>
            </dependency>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-lang3</artifactId>
                <version>3.18.0</version>
            </dependency>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-text</artifactId>
                <version>1.14.0</version>
            </dependency>
            <dependency>
                <groupId>org.scala-lang</groupId>
                <artifactId>scala-reflect</artifactId>
                <version>2.13.10</version>
            </dependency>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-pool2</artifactId>
                <version>2.12.1</version>
            </dependency>
        </dependencies>
    </dependencyManagement>
    <dependencies>
        <dependency>
            <groupId>com.atscale.gatling</groupId>
            <artifactId>atscale-gatling-core</artifactId>
            <version>${atscale.gatling.core.version}</version>
        </dependency>
        <!-- For AtScale JDBC Interface -->
        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <version>42.7.3</version>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter</artifactId>
            <version>5.10.2</version>
            <scope>test</scope>
        </dependency>
       <dependency>
           <groupId>org.slf4j</groupId>
           <artifactId>slf4j-api</artifactId>
           <version>2.0.17</version>
       </dependency>
        <!-- Support JDBC for AtScale Installer Version requires Hive JDBC Uber Jar downloaded to /lib.
        It is sourced from https://github.com/timveil/hive-jdbc-uber-jar/releases
        Install this from /lib by running the ConfigurationExecutor -->
        <dependency>
            <groupId>veil.hdp.hive</groupId>
            <artifactId>hive-jdbc-uber</artifactId>
            <version>2.6.3.0-235</version>
        </dependency>
    </dependencies>
</project>